services:

  php:
    image: drupal:10.0.3-php8.2-fpm-bullseye
    ports:
      - 9000:9000
    volumes:
      - /var/www/html/modules
      - /var/www/html/profiles
      - /var/www/html/themes
      # this takes advantage of the feature in Docker that a new anonymous
      # volume (which is what we're creating here) will be initialized with the
      # existing content of the image at the same location
      - /var/www/html/sites
    restart: always
    networks:
      - ultri-net
  
  nginx:
    image: nginx:alpine
    ports:
      - "8888:80"
    networks:
      - ultri-net
    volumes:
    - /var/www/html
    - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

  postgres:
    container_name: ultri-ecomm-postgres
    hostname: "postgres"
    image: "postgres:14"
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      timeout: 45s
      interval: 10s
      retries: 10
    ports:
      - "5432:5432"
    restart: always
    env_file: .env
    volumes:
      - postgres-db:/var/lib/postgres/data
      - ./postgres:/docker-entrypoint-initdb.d/
    networks:
      - ultri-net

volumes:
  postgres-db: {}

networks:
  ultri-net:
    driver: bridge
